{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}

{{ attach_library('egs_tw/node') }}

<article{{ attributes.addClass(classes) }}>
  <div{{ content_attributes.addClass('node__content') }}>

      <div class="relative">
      {{ content.field_media_gallery }}
        <div class="absolute bottom-0 inline-flex p-2 text-white transform -translate-x-1/2 bg-gray-900 bg-opacity-50 pointer-events-none left-1/2">
            <span>{{ 'Open gallery'|t }}</span>
        </div>
      </div>
      

      <div class="bg-white">
        <div class="container relative">
          <div class="grid grid-cols-1 py-12 sm:gap-6 md:gap-12 sm:grid-cols-2 md:grid-cols-3">
            
            <div class="col-span-1">
              <h1 class="mb-8 text-4xl lg:text-6xl text-verdun-bright page-title">{{ label }}</h1>
              <div class="mb-8 text-2xl font-headline">
                {{ content.field_strapline }}
              </div>  
            </div>

            <div class="col-span-2 prose lg:prose-lg">

              <div class="mb-6">{{ content.field_detail	}}</div>
              <div class="mb-8">{{ content.field_price }}</div>

              <a href="{{ content.field_booking_link.0['#url'] }}" class="px-6 py-3 font-bold border bg-aths-lighter text-baragon hover:no-underline hover:text-baragon hover:bg-aths border-baragon not-prose">
                {{ content.field_booking_link.0['#title'] }}
              </a>


            </div>

            <div class="absolute bottom-0 right-0 opacity-25 letter">
            {{ content.field_icon.0 }}
            </div>


          </div>
        </div>
      </div>

      {# top section #}
      <div class="container">
        <div class="grid items-end grid-cols-1 py-6 mb-6 sm:gap-6 md:gap-12 2xl:gap-24 md:grid-cols-3">

          <div class="col-span-2">
            <div class="prose lg:prose-lg !max-w-none mb-6">{{ content.body }}</div>
            {{ content.field_main_image_one }} 
          </div>

          <div class="col-span-1">
            <div class="">
              {{ content.field_main_image_two }} 
            </div>
          </div>  

        </div>
      </div>


      {# mid section #}
      <div class="container">
        <div class="grid grid-cols-1 py-6 md:gap-12 2xl:gap-24 md:grid-cols-3">

          <div class="col-span-1">
            <div class="prose lg:prose-lg">{{ content.field_mid_section_heading }}</div>
          </div>

          <div class="col-span-2">
              <div class="prose lg:prose-lg !max-w-none">
              {{ content.field_mid_section_text }}
              </div>
          </div>  

        </div>

        <div class="mb-6">
          {{ content.field_mid_section_images }} 
        </div>

      </div>


      {# bottom section #}
      <div class="container">
        <div class="grid grid-cols-1 py-6 md:gap-12 2xl:gap-24 md:grid-cols-3">
          <div class="col-span-2">
            <div class="prose border border-aths lg:prose-lg !max-w-none mb-12">
            {{ content.field_accordion }} 
            </div>
          </div>

          <div class="col-span-1 mb-12">
              {{ content.field_bottom_image}} 
          </div>

        </div>
      </div>

  </div>
</article>





